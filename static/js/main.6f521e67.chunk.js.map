{"version":3,"sources":["components/components/myResume.js","components/components/landingpage.js","components/components/portfolio.js","components/components/contact.js","components/components/aboutme.js","components/main.js","components/Navbar.js","components/PenguinWave.js","App.js","serviceWorker.js","index.js"],"names":["MyResume","Component","Landing","Portfolio","Contact","Aboutme","Main","exact","path","component","LandingPage","AboutMe","Navbar","className","title","scroll","href","PenguinWave","class","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sOAUeA,E,iLANX,OACE,6BAAK,gD,GAHYC,aCQRC,E,iLANX,OACE,6BAAK,iD,GAHWD,aCQPE,E,iLANX,OACE,6BAAK,mD,GAHaF,aCQTG,E,iLANX,OACE,6BAAK,iD,GAHWH,aCQPI,E,iLANX,OACE,6BAAK,+C,GAHWJ,aCkBPK,EAVF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYC,UAAWT,IACzC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,aAAaC,UAAWN,IAC1C,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,cAAcC,UAAWL,IAC3C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,cAAcC,UAAWE,MCmBhCC,MA9Bf,WACE,OACE,yBAAKC,UAAU,oBACf,kBAAC,SAAD,KACE,kBAAC,SAAD,CAAQC,MAAM,QAAQC,QAAM,GACxB,kBAAC,aAAD,KAEI,uBAAGC,KAAK,aAAR,UACA,uBAAGA,KAAK,eAAR,YACA,uBAAGA,KAAK,iBAAR,aACA,uBAAGA,KAAK,eAAR,aAGR,kBAAC,SAAD,CAAQF,MAAM,SACV,kBAAC,aAAD,KACE,uBAAGE,KAAK,gBAAR,UACE,uBAAGA,KAAK,eAAR,YACA,uBAAGA,KAAK,iBAAR,aACA,uBAAGA,KAAK,eAAR,aAGR,kBAAC,UAAD,KACI,yBAAKH,UAAU,iBACf,kBAAC,EAAD,U,OCEKI,MA3Bf,WACE,OACE,yBAAKC,MAAM,YACT,yBAAKA,MAAM,mBACT,yBAAKA,MAAM,gBACX,yBAAKA,MAAM,eACX,yBAAKA,MAAM,gBACX,yBAAKA,MAAM,gBAEb,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,iBACX,yBAAKA,MAAM,gBACX,yBAAKA,MAAM,WACX,yBAAKA,MAAM,cACT,yBAAKA,MAAM,cAEb,yBAAKA,MAAM,aACT,yBAAKA,MAAM,cAEb,yBAAKA,MAAM,iBACX,yBAAKA,MAAM,gBACX,yBAAKA,MAAM,cACX,yBAAKA,MAAM,oBCGJC,MAbf,WACE,OACE,yBAAKN,UAAU,OAKb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCXcO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0BCTNC,IAASC,OACP,kBAAC,IAAD,CAAYC,SAAUC,OACpB,kBAAC,EAAD,OAGFC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6f521e67.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass MyResume extends Component {\n  render() {\n    return (\n      <div><h1>Resume Page</h1></div>\n    )\n  }\n}\n\nexport default MyResume;","import React, {Component} from 'react';\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div><h1>Landing Page</h1></div>\n    )\n  }\n}\n\nexport default Landing;","import React, {Component} from 'react';\n\nclass Portfolio extends Component {\n  render() {\n    return (\n      <div><h1>Portfolio Page</h1></div>\n    )\n  }\n}\n\nexport default Portfolio;","import React, {Component} from 'react';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div><h1>Contact Page</h1></div>\n    )\n  }\n}\n\nexport default Contact;","import React, {Component} from 'react';\n\nclass Aboutme extends Component {\n  render() {\n    return (\n      <div><h1>About Page</h1></div>\n    )\n  }\n}\n\nexport default Aboutme;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// components\nimport MyResume from './components/myResume';\nimport LandingPage from './components/landingpage';\nimport Portfolio from './components/portfolio';\nimport Contact from './components/contact';\nimport AboutMe from './components/aboutme';\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={LandingPage} />\n    <Route exact path=\"/myresume\" component={MyResume} />\n    <Route exact path=\"/portfolio\" component={Portfolio} />\n    <Route exact path=\"/cv/contact\" component={Contact} />\n    <Route exact path=\"/cv/aboutme\" component={AboutMe} />\n  </Switch>\n)\n\nexport default Main;","import React from 'react';\nimport {Layout, Header, Drawer, Navigation, Content} from 'react-mdl';\nimport Main from './main';\n\n\nfunction Navbar() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n      <Header title=\"Title\" scroll>\n          <Navigation>\n              \n              <a href=\"/myresume\">Resume</a>\n              <a href=\"/cv/aboutme\">About Me</a>\n              <a href=\"/cv/portfolio\">Potrfolio</a>\n              <a href=\"/cv/contact\">Contact</a>\n          </Navigation>\n      </Header>\n      <Drawer title=\"Title\">\n          <Navigation>\n            <a href=\"/cv/myresume\">Resume</a>\n              <a href=\"/cv/aboutme\">About Me</a>\n              <a href=\"/cv/portfolio\">Potrfolio</a>\n              <a href=\"/cv/contact\">Contact</a>\n          </Navigation>\n      </Drawer>\n      <Content>\n          <div className=\"page-content\" />\n          <Main />\n      </Content>\n    </Layout>\n  </div>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport '../css/penguinWave.css';\n\nfunction PenguinWave() {\n  return (\n    <div class=\"wpenguin\">\n      <div class=\"wpenguin-bottom\">\n        <div class=\"wright-hand\"></div>\n        <div class=\"wleft-hand\"></div>\n        <div class=\"wright-feet\"></div>\n        <div class=\"wleft-feet\"></div>\n      </div>\n      <div class=\"wpenguin-top\">\n        <div class=\"wright-cheek\"></div>\n        <div class=\"wleft-cheek\"></div>\n        <div class=\"wbelly\"></div>\n        <div class=\"wright-eye\">\n          <div class=\"wsparkle\"></div>\n        </div>\n        <div class=\"wleft-eye\">\n          <div class=\"wsparkle\"></div>\n        </div>\n        <div class=\"wblush-right\"></div>\n        <div class=\"wblush-left\"></div>\n        <div class=\"wbeak-top\"></div>\n        <div class=\"wbeak-bottom\"></div>\n      </div>\n    </div>\n  )\n}\nexport default PenguinWave;","import React from 'react';\nimport './App.css';\n\n// CSS\nimport './css/resume.css';\n\n// Components\n// import Nav from './components/Nav';\n// import Penguin from './components/Penguin';\n// import Survey from './components/components/Survey';\nimport Navbar from './components/Navbar';\nimport PenguinWave from './components/PenguinWave';\n\n// import './js/resume';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Nav />\n      <Penguin />\n      \n      <Survey /> */}\n      <Navbar />\n      <PenguinWave /> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </HashRouter>\n  , \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}